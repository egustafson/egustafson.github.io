<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stuff I've Figured Out</title><link href="https://egustafson.github.io/" rel="alternate"></link><link href="https://egustafson.github.io/feeds/howto.atom.xml" rel="self"></link><id>https://egustafson.github.io/</id><updated>2015-01-09T00:00:00-07:00</updated><entry><title>Syncthing onÂ Ubuntu</title><link href="https://egustafson.github.io/syncthing-ubuntu.html" rel="alternate"></link><updated>2015-01-09T00:00:00-07:00</updated><author><name>Eric Gustafson</name></author><id>tag:egustafson.github.io,2015-01-09:syncthing-ubuntu.html</id><summary type="html">&lt;p&gt;Last month, after looking at &lt;a class="reference external" href="http://www.getsync.com/"&gt;BitTorrent Sync&lt;/a&gt; and realizing it was
encrypted and private, but &lt;em&gt;not&lt;/em&gt; open source, I went digging for an
alternative.  I found the perfect project, for me:  &lt;a class="reference external" href="http://syncthing.net/"&gt;Syncthing&lt;/a&gt;.  The
project is still relatively young and while it has proven to be
perfectly functional, it did not come with batteries included &amp;#8212; an
installer package.   It does come with init scripts for some
environments, but not for Ubuntu &amp;#8212; at least until Ubuntu transitions
to systemd.  So, without further ado, here&amp;#8217;s what I did to install
Syncthing as daemon (service) under&amp;nbsp;Ubuntu.&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Run as:&lt;/th&gt;&lt;td class="field-body"&gt;User: &amp;#8216;synct&amp;#8217; // Group: &amp;#8216;synct&amp;#8217;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Service Name:&lt;/th&gt;&lt;td class="field-body"&gt;syncthing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Install to:&lt;/th&gt;&lt;td class="field-body"&gt;/opt/syncthing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Config:&lt;/th&gt;&lt;td class="field-body"&gt;/opt/syncthing/etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;span class="caps"&gt;GUI&lt;/span&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;Exposed at 0.0.0.0:8080&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Public Access:&lt;/th&gt;&lt;td class="field-body"&gt;Firewall port redirect.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;There&amp;#8217;s nothing out of the ordinary about installing Syncthing as a service.
Above are the details I chose for how I&amp;#8217;d install the service.  There are two
points are worth noting.  First, after the initial install the service&amp;#8217;s
configuration is editable through the web-gui; the &lt;span class="caps"&gt;XML&lt;/span&gt; config will be in
/opt/syncthing/etc.  Second, sync-able repositories do not have to live in the
installation directory.  Installing is mostly about creating the extra fluff
needed to have init start the&amp;nbsp;binary.&lt;/p&gt;
&lt;p&gt;A reminder - this is aimed at an &lt;strong&gt;Ubuntu&lt;/strong&gt; system.  Specifically, 14.10
(Utopic) was used, although earlier versions should work too.  When Ubuntu
transitions to systemd as an init system, the included Upstart script will not
be applicable.  (Current rumor is that the transition will be in the next
release &amp;#8212; caveat&amp;nbsp;emptor)&lt;/p&gt;
&lt;div class="section" id="create-user-and-group-for-the-daemon"&gt;
&lt;h2&gt;1. Create User and Group for the&amp;nbsp;Daemon&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## add home dir first so adduser does not populate it with skel files.&lt;/span&gt;
sudo mkdir /opt/syncthing
sudo mkdir /opt/syncthing/etc
sudo adduser --system --group --home /opt/syncthing synct
sudo chown -R synct.synct /opt/syncthing
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;synct&lt;/tt&gt; group provides the opportunity to add authorized users to make
&amp;#8216;syncable&amp;#8217; folders with the &lt;tt class="docutils literal"&gt;synct&lt;/tt&gt; group.  Those users can manage their
folder(s) with out the need for sudo/root&amp;nbsp;privilege.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-syncthing-binary"&gt;
&lt;h2&gt;2. Install the Syncthing&amp;nbsp;Binary&lt;/h2&gt;
&lt;p&gt;Fetch the binary from the &lt;a class="reference external" href="https://github.com/syncthing/syncthing"&gt;Syncthing GitHub Project&lt;/a&gt;.  The releases &lt;span class="caps"&gt;URL&lt;/span&gt; is:
&lt;a class="reference external" href="https://github.com/syncthing/syncthing/releases"&gt;https://github.com/syncthing/syncthing/releases&lt;/a&gt;.  Download the tarball
appropriate for your architecture.  (The example uses &lt;tt class="docutils literal"&gt;amd64&lt;/tt&gt;, and version&amp;nbsp;0.10.18)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
tar -xvf /path-to/syncthing-linux-amd64-v0.10.18.tar.gz
sudo mkdir /opt/syncthing/bin
sudo cp syncthing-linux-amd64-v0.10.18/syncthing /opt/syncthing/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only file needed from the release tarball is the executable itself.  The
executable is tar&amp;#8217;ed with execute permission, but it never hurts to verify its&amp;nbsp;executable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-an-upstart-script"&gt;
&lt;h2&gt;4. Install an Upstart&amp;nbsp;&amp;quot;Script&amp;quot;&lt;/h2&gt;
&lt;p&gt;Install the following Upstart configuration file in &lt;tt class="docutils literal"&gt;/etc/init/syncthing.conf&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;description  &amp;quot;syncthing daemon&amp;quot;
author       &amp;quot;Eric Gustafson &amp;lt;egustafson in launchpad&amp;gt;&amp;quot;

start on (local-filesystems and net-device-up IFACE!=lo)
stop on runlevel [!2345]

setuid synct
setgid synct

env HOME=/opt/syncthing

exec /opt/syncthing/bin/syncthing -home /opt/syncthing/etc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A couple of notes on the conf&amp;nbsp;file:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Setting the &lt;tt class="docutils literal"&gt;&lt;span class="caps"&gt;HOME&lt;/span&gt;&lt;/tt&gt; env lets syncthing know where to create the default,
&lt;tt class="docutils literal"&gt;Sync&lt;/tt&gt; folder on initial start-up.  I had problems before I added this&amp;nbsp;stanza.&lt;/li&gt;
&lt;li&gt;Using the &amp;quot;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-home&lt;/span&gt; /opt/syncthing/etc&lt;/tt&gt;&amp;quot; flag instructs syncthing to place
all configuration files &lt;em&gt;directly&lt;/em&gt; into the &lt;tt class="docutils literal"&gt;etc&lt;/tt&gt; directory.  If this flag
is missing it will place the configuration in a hidden directory under
&lt;tt class="docutils literal"&gt;$&lt;span class="caps"&gt;HOME&lt;/span&gt;&lt;/tt&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It would be nice to get a list of supported environment variables and command
line switches, but the docs are not there yet.  Conversely, I could &amp;quot;read the
source luke&amp;quot;, so I should stop whining and go contribute&amp;nbsp;;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="start-and-verify-the-service"&gt;
&lt;h2&gt;5. Start and Verify the&amp;nbsp;Service&lt;/h2&gt;
&lt;p&gt;If the stars are aligned, then the service will&amp;nbsp;start:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service syncthing start
sudo tail -f /var/log/upstart/syncthing.log
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point the service is (hopefully) up.  There is a small problem, however:
the configuration created on first-run restricts the web-gui to loopback only
(127.0.0.1).  This is fine if the machine is your desktop, but can be a snag if
its remote.  The config file can be edited by hand to change&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;In preparation for changing the listening address for the&amp;nbsp;web-gui:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service syncthing stop
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modify-the-configuration-to-expose-the-web-gui"&gt;
&lt;h2&gt;6. Modify the Configuration to expose the Web &lt;span class="caps"&gt;GUI&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Edit the config file:  &lt;tt class="docutils literal"&gt;/opt/syncthing/etc/config.xml&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## syncthing changes the permissions on etc, sudo is required&lt;/span&gt;
sudo emacs /opt/syncthing/etc/config.xml
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following line should be changed as depicted.  The important aspect is to
change the &lt;tt class="docutils literal"&gt;127.0.0.1&lt;/tt&gt; to the wildcard address, &lt;tt class="docutils literal"&gt;0.0.0.0&lt;/tt&gt;.  [The port could
be changed too, if need&amp;nbsp;be.]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;gui&lt;/span&gt; &lt;span class="na"&gt;enabled=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;tls=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;address&amp;gt;&lt;/span&gt;0.0.0.0:8080&lt;span class="nt"&gt;&amp;lt;/address&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/gui&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now restart the&amp;nbsp;service&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service syncthing start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and point a web browser at port 8080 of the&amp;nbsp;host.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="optional-firewall-port-redirect"&gt;
&lt;h2&gt;7. (Optional) Firewall Port&amp;nbsp;Redirect&lt;/h2&gt;
&lt;p&gt;At this point you have a perfectly good, working Syncthing &amp;#8212;&amp;nbsp;congratulations.&lt;/p&gt;
&lt;p&gt;However, if your host is behind a firewall it may not be reachable for
sync-ing.  The first point:  if you have a consumer firewall that supports UPnP
then Syncthing is likely visible as it supports, and enables by default, UPnP.
If you don&amp;#8217;t have UPnP enabled on your firewall or the Syncthing instance is not
visible then following the &amp;quot;&lt;a class="reference external" href="https://github.com/syncthing/syncthing/wiki/Firewalls-and-Port-Forwards"&gt;Firewalls and Port Forwards&lt;/a&gt;&amp;quot; instructions on the
&lt;a class="reference external" href="https://github.com/syncthing/syncthing/wiki"&gt;wiki&lt;/a&gt; will help you resolve the&amp;nbsp;issue.&lt;/p&gt;
&lt;p&gt;In short: plumb &lt;span class="caps"&gt;TCP&lt;/span&gt; port 22000 through from your firewall to the server.  Port
22000 is the default port for the Block Exchange Protocol &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; (&lt;span class="caps"&gt;BEP&lt;/span&gt;), and the
only port necessary for a remote agent to connect with your&amp;nbsp;server.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The protocols Syncthing uses are documented here:  &lt;a class="reference external" href="https://github.com/syncthing/specs"&gt;https://github.com/syncthing/specs&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;That&amp;#8217;s it, you&amp;#8217;re done.  Happy&amp;nbsp;syncing.&lt;/p&gt;
&lt;!-- Local Variables: --&gt;
&lt;!-- fill-column: 80 --&gt;
&lt;!-- End: --&gt;
&lt;/div&gt;
</summary><category term="install"></category><category term="ubuntu"></category><category term="sync"></category><category term="syncthing"></category></entry><entry><title>Installing Pelican onÂ Cygwin</title><link href="https://egustafson.github.io/pelican-cygwin.html" rel="alternate"></link><updated>2014-07-29T00:00:00-06:00</updated><author><name>Eric Gustafson</name></author><id>tag:egustafson.github.io,2014-07-29:pelican-cygwin.html</id><summary type="html">&lt;p&gt;One of the many good reasons I chose &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; as a static blog site
generator was because I felt confident I could deploy and use the
tools under Windows, with &lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt;.  What I couldn&amp;#8217;t find was any
reference to success installing Pelican under Cygwin.  It turns out
that the combination is not difficult to make work.  Here is my
success story installing Pelican under&amp;nbsp;Cygwin.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Windows &amp;#8212; hopefully&amp;nbsp;obvious.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; &amp;#8212; also hopefully&amp;nbsp;obvious&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cygwinports.org/"&gt;Cygwin Ports&lt;/a&gt; &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cygwin Packages&lt;ul&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;li&gt;python-setuptools&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I consistently add &lt;a class="reference external" href="http://cygwinports.org/"&gt;Cygwin Ports&lt;/a&gt; to my Cygwin installation.
Its possible these instructions work with out adding the ports
collection in.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="procedure"&gt;
&lt;h2&gt;Procedure&lt;/h2&gt;
&lt;p&gt;Installing &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; under &lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; ended up being fairly straight
forward.  I encountered one small problem: some of Pelican&amp;#8217;s
dependencies would not install from source.  This is easily
circumvented by using the equivalent &lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; packages.  With out
further&amp;nbsp;ado.&lt;/p&gt;
&lt;div class="section" id="install-pelican-dependencies-from-cygwin"&gt;
&lt;h3&gt;1. Install &lt;a class="reference external" href="http://docs.getpelican.com/en/3.4.0/install.html#dependencies"&gt;Pelican Dependencies&lt;/a&gt; from&amp;nbsp;Cygwin&lt;/h3&gt;
&lt;p&gt;Start Cygwin&amp;#8217;s &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;setup-x86.exe&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id4" id="id3"&gt;[2]&lt;/a&gt; to update your installation.
Install the following packages, if not already&amp;nbsp;present.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;pypy-jinja2&lt;/li&gt;
&lt;li&gt;pypy-pygments&lt;/li&gt;
&lt;li&gt;python-docutils&lt;/li&gt;
&lt;li&gt;python-pytz&lt;/li&gt;
&lt;li&gt;python-six&lt;/li&gt;
&lt;li&gt;pypy-markupsafe&lt;/li&gt;
&lt;li&gt;pypy-dateutil&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="complete-using-the-command-line"&gt;
&lt;h3&gt;2. Complete using the command&amp;nbsp;line&lt;/h3&gt;
&lt;p&gt;Start a cygwin terminal window and use command line tools to complete
the installation.  If you do not already have &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;
&amp;lt;&lt;a class="reference external" href="http://pip.readthedocs.org/"&gt;http://pip.readthedocs.org/&lt;/a&gt;&amp;gt; installed, use &lt;tt class="docutils literal"&gt;easy_install&lt;/tt&gt;, from
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;python-setuptools&lt;/span&gt;&lt;/tt&gt; to install &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; easy_install pip
...
&amp;gt; pip install &lt;span class="s2"&gt;&amp;quot;git+https://github.com/getpelican/pelican.git#egg-pelican&amp;quot;&lt;/span&gt;
...
&lt;span class="c"&gt;# ... a lot of output as the recursive dependencies are resolved ...&lt;/span&gt;
&lt;span class="c"&gt;# expect warnings, but a final notice saying pelican was successfully&lt;/span&gt;
&lt;span class="c"&gt;# installed along with additional, dependent packages.&lt;/span&gt;
...
&amp;gt; pelican --help
...
&lt;span class="c"&gt;# output consistent with the help from pelican.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note:  Pelican can be simply installed with &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; using &lt;tt class="docutils literal"&gt;pip
install pelican&lt;/tt&gt;.  I chose to pull Pelican from source so I could
stay on their&amp;nbsp;trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verify"&gt;
&lt;h2&gt;Verify&lt;/h2&gt;
&lt;p&gt;It doesn&amp;#8217;t count if it doesn&amp;#8217;t work.  The following steps are the smoke
test I ran to convince myself the installation was working reasonably&amp;nbsp;correct.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; mkdir tmp; &lt;span class="nb"&gt;cd &lt;/span&gt;tmp   &lt;span class="c"&gt;# (optional, do what makes sense)&lt;/span&gt;
&amp;gt; pelican-quickstart
...
&lt;span class="c"&gt;# give reasonable answers&lt;/span&gt;
...
&amp;gt; pelican content
...
&amp;gt; ./develop_server start
...
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;point your favorite web browser at &lt;a class="reference external" href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; and the
template site should be&amp;nbsp;visible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: my first instinct was to simply point a browser directly at
the files generated by Pelican in the &lt;tt class="docutils literal"&gt;output&lt;/tt&gt; directory; this was
only partially successful.  I observed the rendered &lt;span class="caps"&gt;HTML&lt;/span&gt;, but no
styling; it threw me off for a&amp;nbsp;minute,&lt;/p&gt;
&lt;p&gt;So far I have not encountered any problems; using
Windows/Cygwin is always a small adventure for *nix native projects,
so I&amp;#8217;m &amp;#8230; cautiously&amp;nbsp;optimistic.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;lt;&lt;a class="reference external" href="https://www.cygwin.com/install.html"&gt;https://www.cygwin.com/install.html&lt;/a&gt;&amp;gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- LocalWords:  Cygwin cygwin Gustafson pypy --&gt;
&lt;/div&gt;
</summary><category term="pelican"></category><category term="cygwin"></category><category term="blog"></category></entry><entry><title>Simple collectd with WebÂ Graphs</title><link href="https://egustafson.github.io/collectd-web-graphs.html" rel="alternate"></link><updated>2012-04-10T00:00:00-06:00</updated><author><name>Eric Gustafson</name></author><id>tag:egustafson.github.io,2012-04-10:collectd-web-graphs.html</id><summary type="html">&lt;p&gt;I want to collect machine metrics and I want to display them as a
pretty set of graphs through a web browser.  Here&amp;#8217;s how I do&amp;nbsp;it:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Install &lt;a class="reference external" href="http://collectd.org/"&gt;collectd&lt;/a&gt; &amp;#8212; this gathers the&amp;nbsp;metrics.&lt;/li&gt;
&lt;li&gt;Install &lt;a class="reference external" href="http://lighttpd.net/"&gt;lighttpd&lt;/a&gt; &amp;#8212; my web server preference, also install&amp;nbsp;php.&lt;/li&gt;
&lt;li&gt;Download and install collectd graph panel (&lt;a class="reference external" href="https://github.com/pommi/CGP"&gt;&lt;span class="caps"&gt;CGP&lt;/span&gt;&lt;/a&gt;) &amp;#8212; a &lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;nbsp;webapp.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&amp;#8217;s the short&amp;nbsp;version.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;The following walk through will demonstrate the installation using
Ubuntu Oneiric (11.10). Note, the &lt;tt class="docutils literal"&gt;sudo&lt;/tt&gt; is generally required, but
dropped from the commands listed&amp;nbsp;below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install collectd lighttpd php5-cgi php5
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;next, edit &lt;tt class="docutils literal"&gt;/etc/php5/cgi/php.ini&lt;/tt&gt; to enable php5 in lighttpd.
Uncomment the line &amp;quot;&lt;tt class="docutils literal"&gt;cgi.fix_pathinfo=1&lt;/tt&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Restart lighttpd and you have a working&amp;nbsp;lighttpd+php5.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lighttpd-enable-mod fastcgi
lighttpd-enable-mod fastcgi-php
service lighttpd force-reload
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, download and &amp;quot;&lt;cite&gt;install&lt;/cite&gt;&amp;quot; collectd graph panel (&lt;span class="caps"&gt;CGP&lt;/span&gt;).  &lt;span class="caps"&gt;CGP&lt;/span&gt; is
downloaded with &lt;tt class="docutils literal"&gt;git&lt;/tt&gt;, if you do not have git installed&amp;nbsp;then:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download &lt;span class="caps"&gt;CGP&lt;/span&gt; into the lighttpd root&amp;nbsp;directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/www
git clone http://git.nethuis.nl/pub/cgp.git
chown -R www-data.www-data cgp   &lt;span class="c"&gt;## optional&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Done!  Browse to &lt;a class="reference external" href="http://localhost/cgp/"&gt;http://localhost/cgp/&lt;/a&gt; to access the&amp;nbsp;graphs.&lt;/p&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="configuring-what-metrics-collectd-collects"&gt;
&lt;h2&gt;Configuring what metrics collectd&amp;nbsp;collects&lt;/h2&gt;
&lt;p&gt;The primary configuration for &lt;a class="reference external" href="http://collectd.org/"&gt;collectd&lt;/a&gt; as
Ubuntu installs it is placed in &lt;tt class="docutils literal"&gt;/etc/collectd/collectd.conf&lt;/tt&gt;.  The
configuration file is commented.  Refer to the collectd &lt;a class="reference external" href="http://collectd.org/documentation.shtml"&gt;documentation&lt;/a&gt;
page for further details.  For each plugin see the plugin pages listed
along the side of the documentation page.  Many plugins do not require
additional configuration &amp;#8212; simply uncommenting them is a good
starting&amp;nbsp;point.&lt;/p&gt;
&lt;p&gt;After editing the collectd configuration, the service must be
restarted with the typical service restart&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service collectd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Many of the plugins default to collecting all possible metrics covered
by the plugin.  It is possible, via the plugin&amp;#8217;s specific
configuration, to prune out unwanted metrics.  A good example of this
is the &amp;#8216;&lt;tt class="docutils literal"&gt;interfaces&lt;/tt&gt;&amp;#8216; plugin which includes statistics for the
loopback interface by&amp;nbsp;default.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="customizing-cgp"&gt;
&lt;h2&gt;Customizing &lt;span class="caps"&gt;CGP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/pommi/CGP"&gt;&lt;span class="caps"&gt;CGP&lt;/span&gt;&lt;/a&gt; website does not provide any configuration documentation,
however it is not difficult to customize &lt;span class="caps"&gt;CGP&lt;/span&gt;.  If installed, as shown
above, &lt;span class="caps"&gt;CGP&lt;/span&gt;&amp;#8217;s configuration file will be:
&lt;tt class="docutils literal"&gt;/var/www/cgp/conf/config.php&lt;/tt&gt;.  This file is commented with details
for changing the&amp;nbsp;configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-additional-hosts"&gt;
&lt;h2&gt;Adding additional&amp;nbsp;hosts&lt;/h2&gt;
&lt;p&gt;Nothing is required of &lt;span class="caps"&gt;CGP&lt;/span&gt; to add additional hosts.  Simply install
&lt;a class="reference external" href="http://collectd.org/"&gt;collectd&lt;/a&gt; on the additional machines and configure the &lt;a class="reference external" href="http://collectd.org/wiki/index.php/Plugin:Network"&gt;network
plugin&lt;/a&gt; on both the client and server.  In most cases, the commented
out configuration, which uses multicast, will suffice for configuring
the network&amp;nbsp;plugin.&lt;/p&gt;
&lt;p&gt;Now sit back and enjoy the pretty graphs of your running&amp;nbsp;servers.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="monitoring"></category><category term="lighttpd"></category><category term="collectd"></category><category term="CGP"></category></entry><entry><title>MediaWiki with Lighttpd &amp; SQLite onÂ Ubuntu</title><link href="https://egustafson.github.io/mediawiki-lighttpd-sqlite.html" rel="alternate"></link><updated>2012-02-18T00:00:00-07:00</updated><author><name>Eric Gustafson</name></author><id>tag:egustafson.github.io,2012-02-18:mediawiki-lighttpd-sqlite.html</id><summary type="html">&lt;p&gt;In rebuilding an old, and rarely used server that runs &lt;a class="reference external" href="https://www.mediawiki.org/"&gt;MediaWiki&lt;/a&gt; I
reconsidered how to install all of the dependencies that MediaWiki
sits on top of. My goal was to choose lightweight components. The only
thing that would run on this web server would be MediaWiki, and the
wiki would be lightly used. I concluded the following components were
likely more suitable choices than the defaults MediaWiki and/or
Ubuntuâs package system&amp;nbsp;used.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.lighttpd.net"&gt;Lighttpd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.sqlite.org"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second goal was, based on my preference for Ubuntu as a
distribution, build MediaWiki on top of Ubuntu using just Ubuntu
packages, no source installation. The principal value in this is that
over time the components in use can be simply upgraded using the stock
Ubuntu package mechanisms (i.e. &lt;code&gt;apt-get upgrade&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The following is the sequence I used to install MediaWiki. This
installation guide is based on Ubuntu Oneiric&amp;nbsp;(11.10).&lt;/p&gt;
&lt;div class="section" id="install-prerequisites"&gt;
&lt;h2&gt;Install&amp;nbsp;Prerequisites&lt;/h2&gt;
&lt;p&gt;(note, &lt;cite&gt;sudo&lt;/cite&gt; is generally required, but dropped from the commands&amp;nbsp;below)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install lighttpd
apt-get install php5-cgi php5
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;next, edit &lt;tt class="docutils literal"&gt;/etc/php5/cgi/php.ini&lt;/tt&gt; to enable php5 in lighttpd and
uncomment the&amp;nbsp;line:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
`cgi.fix_pathinfo=1`
&lt;/pre&gt;
&lt;p&gt;Then enable the fastcgi configuration in&amp;nbsp;lighttpd:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lighttpd-enable-mod fastcgi
lighttpd-enable-mod fastcgi-php
service lighttpd force-reload
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install&amp;nbsp;php5-sqlite:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install php5-sqlite
service lighttpd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install optional extras that MediaWiki will take advantage&amp;nbsp;of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install imagemagick php5-gd php5-cli
service lighttpd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-mediawiki"&gt;
&lt;h2&gt;Install&amp;nbsp;MediaWiki&lt;/h2&gt;
&lt;p&gt;Note: The MediaWiki package in Ubuntu (Oneiric) has &amp;#8216;mysql-serverâ
listed as a â&lt;em&gt;recommends&lt;/em&gt;â dependency. This has the implication that
unless explicitly forced to &lt;strong&gt;not&lt;/strong&gt; include the dependency, it will be
included as part of the package install. This is accomplished with the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--no-install-recommends&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get --no-install-recommends install mediawiki
apt-get install mediawiki-math
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-mediawiki"&gt;
&lt;h2&gt;Configure&amp;nbsp;MediaWiki&lt;/h2&gt;
&lt;p&gt;Add the following to lighttpd&amp;#8217;s&amp;nbsp;configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;alias.url += ( &amp;quot;/wiki&amp;quot; =&amp;gt; &amp;quot;/var/lib/mediawiki/&amp;quot; )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;restart lighttpd to effect the configuration&amp;nbsp;change:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service lighttpd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a data directory for MediaWiki to store the SQLite database&amp;nbsp;in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /var/lib/mediawiki-data
chown www-data.www-data /var/lib/mediawiki-data
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Browse to the wiki root: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://hostname/wiki&lt;/span&gt;&lt;/tt&gt; and complete
configuration through the web&amp;nbsp;browser.&lt;/p&gt;
&lt;blockquote&gt;
&amp;#8230;&lt;/blockquote&gt;
&lt;p&gt;Following browser configuration, copy the generated configuration to
the permanent location, as specified on the final browser&amp;nbsp;page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cp /var/lib/mediawiki/config/LocalSettings.php /etc/mediawiki/LocalSettings.php
chown www-data /etc/mediawiki/LocalSettings.php
chmod 600 /etc/mediawiki/LocalSettings.php
rm -rf /var/lib/mediawiki/config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Done.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="lighttpd"></category><category term="sqlite"></category><category term="mediawiki"></category><category term="wiki"></category></entry></feed>