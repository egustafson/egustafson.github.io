<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stuff I've Figured Out</title><link href="https://egustafson.github.io/" rel="alternate"></link><link href="https://egustafson.github.io/feeds/blog.atom.xml" rel="self"></link><id>https://egustafson.github.io/</id><updated>2014-07-29T00:00:00-06:00</updated><entry><title>Installing Pelican on Cygwin</title><link href="https://egustafson.github.io/pelican-cygwin.html" rel="alternate"></link><updated>2014-07-29T00:00:00-06:00</updated><author><name>Eric Gustafson</name></author><id>tag:egustafson.github.io,2014-07-29:pelican-cygwin.html</id><summary type="html">&lt;p&gt;One of the many good reasons I chose &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; as a static blog site
generator was because I felt confident I could deploy and use the
tools under Windows, with &lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt;.  What I couldn't find was any
reference to success installing Pelican under Cygwin.  It turns out
that the combination is not difficult to make work.  Here is my
success story installing Pelican under Cygwin.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Windows -- hopefully obvious.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; -- also hopefully obvious&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cygwinports.org/"&gt;Cygwin Ports&lt;/a&gt; &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cygwin Packages&lt;ul&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;li&gt;python-setuptools&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I consistently add &lt;a class="reference external" href="http://cygwinports.org/"&gt;Cygwin Ports&lt;/a&gt; to my Cygwin installation.
Its possible these instructions work with out adding the ports
collection in.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="procedure"&gt;
&lt;h2&gt;Procedure&lt;/h2&gt;
&lt;p&gt;Installing &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; under &lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; ended up being fairly straight
forward.  I encountered one small problem: some of Pelican's
dependencies would not install from source.  This is easily
circumvented by using the equivalent &lt;a class="reference external" href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; packages.  With out
further ado.&lt;/p&gt;
&lt;div class="section" id="install-pelican-dependencies-from-cygwin"&gt;
&lt;h3&gt;1. Install &lt;a class="reference external" href="http://docs.getpelican.com/en/3.4.0/install.html#dependencies"&gt;Pelican Dependencies&lt;/a&gt; from Cygwin&lt;/h3&gt;
&lt;p&gt;Start Cygwin's &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;setup-x86.exe&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id4" id="id3"&gt;[2]&lt;/a&gt; to update your installation.
Install the following packages, if not already present.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;pypy-jinja2&lt;/li&gt;
&lt;li&gt;pypy-pygments&lt;/li&gt;
&lt;li&gt;python-docutils&lt;/li&gt;
&lt;li&gt;python-pytz&lt;/li&gt;
&lt;li&gt;python-six&lt;/li&gt;
&lt;li&gt;pypy-markupsafe&lt;/li&gt;
&lt;li&gt;pypy-dateutil&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="complete-using-the-command-line"&gt;
&lt;h3&gt;2. Complete using the command line&lt;/h3&gt;
&lt;p&gt;Start a cygwin terminal window and use command line tools to complete
the installation.  If you do not already have &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;
&amp;lt;&lt;a class="reference external" href="http://pip.readthedocs.org/"&gt;http://pip.readthedocs.org/&lt;/a&gt;&amp;gt; installed, use &lt;tt class="docutils literal"&gt;easy_install&lt;/tt&gt;, from
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;python-setuptools&lt;/span&gt;&lt;/tt&gt; to install &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; easy_install pip
...
&amp;gt; pip install &lt;span class="s2"&gt;&amp;quot;git+https://github.com/getpelican/pelican.git#egg-pelican&amp;quot;&lt;/span&gt;
...
&lt;span class="c"&gt;# ... a lot of output as the recursive dependencies are resolved ...&lt;/span&gt;
&lt;span class="c"&gt;# expect warnings, but a final notice saying pelican was successfully&lt;/span&gt;
&lt;span class="c"&gt;# installed along with additional, dependent packages.&lt;/span&gt;
...
&amp;gt; pelican --help
...
&lt;span class="c"&gt;# output consistent with the help from pelican.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note:  Pelican can be simply installed with &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; using &lt;tt class="docutils literal"&gt;pip
install pelican&lt;/tt&gt;.  I chose to pull Pelican from source so I could
stay on their trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verify"&gt;
&lt;h2&gt;Verify&lt;/h2&gt;
&lt;p&gt;It doesn't count if it doesn't work.  The following steps are the smoke
test I ran to convince myself the installation was working reasonably
correct.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; mkdir tmp; &lt;span class="nb"&gt;cd &lt;/span&gt;tmp   &lt;span class="c"&gt;# (optional, do what makes sense)&lt;/span&gt;
&amp;gt; pelican-quickstart
...
&lt;span class="c"&gt;# give reasonable answers&lt;/span&gt;
...
&amp;gt; pelican content
...
&amp;gt; ./develop_server start
...
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;point your favorite web browser at &lt;a class="reference external" href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; and the
template site should be visible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: my first instinct was to simply point a browser directly at
the files generated by Pelican in the &lt;tt class="docutils literal"&gt;output&lt;/tt&gt; directory; this was
only partially successful.  I observed the rendered HTML, but no
styling; it threw me off for a minute,&lt;/p&gt;
&lt;p&gt;So far I have not encountered any problems; using
Windows/Cygwin is always a small adventure for *nix native projects,
so I'm ... cautiously optimistic.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;lt;&lt;a class="reference external" href="https://www.cygwin.com/install.html"&gt;https://www.cygwin.com/install.html&lt;/a&gt;&amp;gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- LocalWords:  Cygwin cygwin Gustafson pypy --&gt;
&lt;/div&gt;
</summary><category term="pelican"></category><category term="cygwin"></category><category term="blog"></category></entry><entry><title>Hello, World</title><link href="https://egustafson.github.io/hello-world.html" rel="alternate"></link><updated>2011-12-09T00:00:00-07:00</updated><author><name>Eric Gustafson</name></author><id>tag:egustafson.github.io,2011-12-09:hello-world.html</id><summary type="html">&lt;p&gt;Obligatory first post:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Hello, world.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I've chosen to follow the GitHub masses and publish this blog with
Brandon Mathis' most excellent &lt;a class="reference external" href="http://octopress.org/"&gt;Octopress&lt;/a&gt;.  Next on the agenda is to
port a number of my wiki notes and how-to's to a more ... revision
controlled outlet:  GitHub.&lt;/p&gt;
&lt;p&gt;Stay tuned - Eric&lt;/p&gt;
</summary></entry></feed>